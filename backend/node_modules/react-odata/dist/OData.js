'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildQuery = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactFetchComponent = require('react-fetch-component');

var _reactFetchComponent2 = _interopRequireDefault(_reactFetchComponent);

var _odataQuery = require('odata-query');

var _odataQuery2 = _interopRequireDefault(_odataQuery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ODataContext = _react2.default.createContext({});

function buildUrl(baseUrl, query) {
  return query !== false && baseUrl + (0, _odataQuery2.default)(query);
}

var OData = function (_Component) {
  _inherits(OData, _Component);

  function OData() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, OData);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = OData.__proto__ || Object.getPrototypeOf(OData)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      query: _this.props.defaultQuery,
      setQuery: function setQuery(updater, cb) {
        return _this.setState(function (prevState) {
          return {
            query: _extends({}, prevState.query, updater === 'function' ? updater(prevState) : updater)
          };
        }, cb);
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(OData, [{
    key: 'renderFetch',
    value: function renderFetch(baseUrl, query, props) {
      return _react2.default.createElement(_reactFetchComponent2.default, _extends({
        url: buildUrl(baseUrl, query),
        fetchFunction: function fetchFunction(url, options, updateOptions) {
          url = typeof url === 'string' ? url : buildUrl(baseUrl, url);
          return fetch(url, options, updateOptions);
        }
      }, props));
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          baseUrl = _props.baseUrl,
          defaultQuery = _props.defaultQuery,
          query = _props.query,
          props = _objectWithoutProperties(_props, ['baseUrl', 'defaultQuery', 'query']);

      var fetchComponent = this.renderFetch(baseUrl, this.props.query !== false && _extends({}, this.props.query, this.state.query), props);

      return _react2.default.createElement(
        ODataContext.Provider,
        { value: this.state },
        typeof children === 'function' ? _react2.default.createElement(
          ODataContext.Consumer,
          null,
          fetchComponent
        ) : fetchComponent
      );
    }
  }]);

  return OData;
}(_react.Component);

OData.Consumer = ODataContext.Consumer;
exports.buildQuery = _odataQuery2.default;
exports.default = OData;